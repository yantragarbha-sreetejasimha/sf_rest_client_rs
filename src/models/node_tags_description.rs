/*
 * Service Fabric Client APIs
 *
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * OpenAPI spec version: 8.2
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// NodeTagsDescription : Describes the tags required for placement or running of the service.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct NodeTagsDescription {
    /// The number of tags.
    #[serde(rename = "Count")]
    count: i32,
    /// Array of size specified by the ‘Count’ parameter, for the placement tags of the service.
    #[serde(rename = "Tags")]
    tags: Vec<String>,
}

impl NodeTagsDescription {
    /// Describes the tags required for placement or running of the service.
    pub fn new(count: i32, tags: Vec<String>) -> NodeTagsDescription {
        NodeTagsDescription { count, tags }
    }

    pub fn set_count(&mut self, count: i32) {
        self.count = count;
    }

    pub fn with_count(mut self, count: i32) -> NodeTagsDescription {
        self.count = count;
        self
    }

    pub fn count(&self) -> &i32 {
        &self.count
    }

    pub fn set_tags(&mut self, tags: Vec<String>) {
        self.tags = tags;
    }

    pub fn with_tags(mut self, tags: Vec<String>) -> NodeTagsDescription {
        self.tags = tags;
        self
    }

    pub fn tags(&self) -> &Vec<String> {
        &self.tags
    }
}
