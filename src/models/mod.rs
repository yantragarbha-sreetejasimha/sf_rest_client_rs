mod aad_metadata;
pub use self::aad_metadata::AadMetadata;
mod aad_metadata_object;
pub use self::aad_metadata_object::AadMetadataObject;
mod add_remove_incremental_named_partition_scaling_mechanism;
pub use self::add_remove_incremental_named_partition_scaling_mechanism::AddRemoveIncrementalNamedPartitionScalingMechanism;
mod add_remove_replica_scaling_mechanism;
pub use self::add_remove_replica_scaling_mechanism::AddRemoveReplicaScalingMechanism;
mod analysis_event_metadata;
pub use self::analysis_event_metadata::AnalysisEventMetadata;
mod application_backup_configuration_info;
pub use self::application_backup_configuration_info::ApplicationBackupConfigurationInfo;
mod application_backup_entity;
pub use self::application_backup_entity::ApplicationBackupEntity;
mod application_capacity_description;
pub use self::application_capacity_description::ApplicationCapacityDescription;
mod application_container_instance_exited_event;
pub use self::application_container_instance_exited_event::ApplicationContainerInstanceExitedEvent;
mod application_created_event;
pub use self::application_created_event::ApplicationCreatedEvent;
mod application_definition_kind;
pub use self::application_definition_kind::ApplicationDefinitionKind;
mod application_deleted_event;
pub use self::application_deleted_event::ApplicationDeletedEvent;
mod application_description;
pub use self::application_description::ApplicationDescription;
mod application_event;
pub use self::application_event::ApplicationEvent;
mod application_event_list;
pub use self::application_event_list::ApplicationEventList;
mod application_health;
pub use self::application_health::ApplicationHealth;
mod application_health_evaluation;
pub use self::application_health_evaluation::ApplicationHealthEvaluation;
mod application_health_policies;
pub use self::application_health_policies::ApplicationHealthPolicies;
mod application_health_policy;
pub use self::application_health_policy::ApplicationHealthPolicy;
mod application_health_policy_map;
pub use self::application_health_policy_map::ApplicationHealthPolicyMap;
mod application_health_policy_map_item;
pub use self::application_health_policy_map_item::ApplicationHealthPolicyMapItem;
mod application_health_policy_map_object;
pub use self::application_health_policy_map_object::ApplicationHealthPolicyMapObject;
mod application_health_report_expired_event;
pub use self::application_health_report_expired_event::ApplicationHealthReportExpiredEvent;
mod application_health_state;
pub use self::application_health_state::ApplicationHealthState;
mod application_health_state_chunk;
pub use self::application_health_state_chunk::ApplicationHealthStateChunk;
mod application_health_state_chunk_list;
pub use self::application_health_state_chunk_list::ApplicationHealthStateChunkList;
mod application_health_state_filter;
pub use self::application_health_state_filter::ApplicationHealthStateFilter;
mod application_id;
pub use self::application_id::ApplicationId;
mod application_info;
pub use self::application_info::ApplicationInfo;
mod application_load_info;
pub use self::application_load_info::ApplicationLoadInfo;
mod application_load_metric_information;
pub use self::application_load_metric_information::ApplicationLoadMetricInformation;
mod application_load_metric_information_list;
pub use self::application_load_metric_information_list::ApplicationLoadMetricInformationList;
mod application_metric_description;
pub use self::application_metric_description::ApplicationMetricDescription;
mod application_metric_description_list;
pub use self::application_metric_description_list::ApplicationMetricDescriptionList;
mod application_name;
pub use self::application_name::ApplicationName;
mod application_name_info;
pub use self::application_name_info::ApplicationNameInfo;
mod application_new_health_report_event;
pub use self::application_new_health_report_event::ApplicationNewHealthReportEvent;
mod application_package_cleanup_policy;
pub use self::application_package_cleanup_policy::ApplicationPackageCleanupPolicy;
mod application_parameter;
pub use self::application_parameter::ApplicationParameter;
mod application_parameter_list;
pub use self::application_parameter_list::ApplicationParameterList;
mod application_process_exited_event;
pub use self::application_process_exited_event::ApplicationProcessExitedEvent;
mod application_properties;
pub use self::application_properties::ApplicationProperties;
mod application_resource_description;
pub use self::application_resource_description::ApplicationResourceDescription;
mod application_resource_name;
pub use self::application_resource_name::ApplicationResourceName;
mod application_resource_upgrade_progress_info;
pub use self::application_resource_upgrade_progress_info::ApplicationResourceUpgradeProgressInfo;
mod application_resource_upgrade_state;
pub use self::application_resource_upgrade_state::ApplicationResourceUpgradeState;
mod application_scoped_volume;
pub use self::application_scoped_volume::ApplicationScopedVolume;
mod application_scoped_volume_creation_parameters;
pub use self::application_scoped_volume_creation_parameters::ApplicationScopedVolumeCreationParameters;
mod application_scoped_volume_creation_parameters_service_fabric_volume_disk;
pub use self::application_scoped_volume_creation_parameters_service_fabric_volume_disk::ApplicationScopedVolumeCreationParametersServiceFabricVolumeDisk;
mod application_scoped_volume_kind;
pub use self::application_scoped_volume_kind::ApplicationScopedVolumeKind;
mod application_status;
pub use self::application_status::ApplicationStatus;
mod application_type_applications_health_evaluation;
pub use self::application_type_applications_health_evaluation::ApplicationTypeApplicationsHealthEvaluation;
mod application_type_definition_kind;
pub use self::application_type_definition_kind::ApplicationTypeDefinitionKind;
mod application_type_health_policy_map;
pub use self::application_type_health_policy_map::ApplicationTypeHealthPolicyMap;
mod application_type_health_policy_map_item;
pub use self::application_type_health_policy_map_item::ApplicationTypeHealthPolicyMapItem;
mod application_type_image_store_path;
pub use self::application_type_image_store_path::ApplicationTypeImageStorePath;
mod application_type_info;
pub use self::application_type_info::ApplicationTypeInfo;
mod application_type_manifest;
pub use self::application_type_manifest::ApplicationTypeManifest;
mod application_type_name;
pub use self::application_type_name::ApplicationTypeName;
mod application_type_parameter_list;
pub use self::application_type_parameter_list::ApplicationTypeParameterList;
mod application_type_status;
pub use self::application_type_status::ApplicationTypeStatus;
mod application_type_version;
pub use self::application_type_version::ApplicationTypeVersion;
mod application_unhealthy_evaluations;
pub use self::application_unhealthy_evaluations::ApplicationUnhealthyEvaluations;
mod application_upgrade_completed_event;
pub use self::application_upgrade_completed_event::ApplicationUpgradeCompletedEvent;
mod application_upgrade_description;
pub use self::application_upgrade_description::ApplicationUpgradeDescription;
mod application_upgrade_domain_completed_event;
pub use self::application_upgrade_domain_completed_event::ApplicationUpgradeDomainCompletedEvent;
mod application_upgrade_progress_info;
pub use self::application_upgrade_progress_info::ApplicationUpgradeProgressInfo;
mod application_upgrade_rollback_completed_event;
pub use self::application_upgrade_rollback_completed_event::ApplicationUpgradeRollbackCompletedEvent;
mod application_upgrade_rollback_started_event;
pub use self::application_upgrade_rollback_started_event::ApplicationUpgradeRollbackStartedEvent;
mod application_upgrade_started_event;
pub use self::application_upgrade_started_event::ApplicationUpgradeStartedEvent;
mod application_upgrade_update_description;
pub use self::application_upgrade_update_description::ApplicationUpgradeUpdateDescription;
mod applications_health_evaluation;
pub use self::applications_health_evaluation::ApplicationsHealthEvaluation;
mod auto_scaling_mechanism;
pub use self::auto_scaling_mechanism::AutoScalingMechanism;
mod auto_scaling_mechanism_kind;
pub use self::auto_scaling_mechanism_kind::AutoScalingMechanismKind;
mod auto_scaling_metric;
pub use self::auto_scaling_metric::AutoScalingMetric;
mod auto_scaling_metric_kind;
pub use self::auto_scaling_metric_kind::AutoScalingMetricKind;
mod auto_scaling_policy;
pub use self::auto_scaling_policy::AutoScalingPolicy;
mod auto_scaling_resource_metric;
pub use self::auto_scaling_resource_metric::AutoScalingResourceMetric;
mod auto_scaling_resource_metric_name;
pub use self::auto_scaling_resource_metric_name::AutoScalingResourceMetricName;
mod auto_scaling_trigger;
pub use self::auto_scaling_trigger::AutoScalingTrigger;
mod auto_scaling_trigger_kind;
pub use self::auto_scaling_trigger_kind::AutoScalingTriggerKind;
mod average_load_scaling_trigger;
pub use self::average_load_scaling_trigger::AverageLoadScalingTrigger;
mod average_partition_load_scaling_trigger;
pub use self::average_partition_load_scaling_trigger::AveragePartitionLoadScalingTrigger;
mod average_service_load_scaling_trigger;
pub use self::average_service_load_scaling_trigger::AverageServiceLoadScalingTrigger;
mod azure_blob_backup_storage_description;
pub use self::azure_blob_backup_storage_description::AzureBlobBackupStorageDescription;
mod azure_internal_monitoring_pipeline_sink_description;
pub use self::azure_internal_monitoring_pipeline_sink_description::AzureInternalMonitoringPipelineSinkDescription;
mod backup_configuration_info;
pub use self::backup_configuration_info::BackupConfigurationInfo;
mod backup_entity;
pub use self::backup_entity::BackupEntity;
mod backup_entity_kind;
pub use self::backup_entity_kind::BackupEntityKind;
mod backup_info;
pub use self::backup_info::BackupInfo;
mod backup_partition_description;
pub use self::backup_partition_description::BackupPartitionDescription;
mod backup_policy_description;
pub use self::backup_policy_description::BackupPolicyDescription;
mod backup_policy_scope;
pub use self::backup_policy_scope::BackupPolicyScope;
mod backup_progress_info;
pub use self::backup_progress_info::BackupProgressInfo;
mod backup_schedule_description;
pub use self::backup_schedule_description::BackupScheduleDescription;
mod backup_schedule_frequency_type;
pub use self::backup_schedule_frequency_type::BackupScheduleFrequencyType;
mod backup_schedule_kind;
pub use self::backup_schedule_kind::BackupScheduleKind;
mod backup_state;
pub use self::backup_state::BackupState;
mod backup_storage_description;
pub use self::backup_storage_description::BackupStorageDescription;
mod backup_storage_kind;
pub use self::backup_storage_kind::BackupStorageKind;
mod backup_suspension_info;
pub use self::backup_suspension_info::BackupSuspensionInfo;
mod backup_suspension_scope;
pub use self::backup_suspension_scope::BackupSuspensionScope;
mod backup_type;
pub use self::backup_type::BackupType;
mod basic_retention_policy_description;
pub use self::basic_retention_policy_description::BasicRetentionPolicyDescription;
mod binary_property_value;
pub use self::binary_property_value::BinaryPropertyValue;
mod byte_array;
pub use self::byte_array::ByteArray;
mod chaos;
pub use self::chaos::Chaos;
mod chaos_code_package_restart_scheduled_event;
pub use self::chaos_code_package_restart_scheduled_event::ChaosCodePackageRestartScheduledEvent;
mod chaos_context;
pub use self::chaos_context::ChaosContext;
mod chaos_context_map;
pub use self::chaos_context_map::ChaosContextMap;
mod chaos_event;
pub use self::chaos_event::ChaosEvent;
mod chaos_event_history;
pub use self::chaos_event_history::ChaosEventHistory;
mod chaos_event_kind;
pub use self::chaos_event_kind::ChaosEventKind;
mod chaos_event_wrapper;
pub use self::chaos_event_wrapper::ChaosEventWrapper;
mod chaos_events_segment;
pub use self::chaos_events_segment::ChaosEventsSegment;
mod chaos_node_restart_scheduled_event;
pub use self::chaos_node_restart_scheduled_event::ChaosNodeRestartScheduledEvent;
mod chaos_parameters;
pub use self::chaos_parameters::ChaosParameters;
mod chaos_parameters_dictionary_item;
pub use self::chaos_parameters_dictionary_item::ChaosParametersDictionaryItem;
mod chaos_partition_primary_move_scheduled_event;
pub use self::chaos_partition_primary_move_scheduled_event::ChaosPartitionPrimaryMoveScheduledEvent;
mod chaos_partition_secondary_move_scheduled_event;
pub use self::chaos_partition_secondary_move_scheduled_event::ChaosPartitionSecondaryMoveScheduledEvent;
mod chaos_replica_removal_scheduled_event;
pub use self::chaos_replica_removal_scheduled_event::ChaosReplicaRemovalScheduledEvent;
mod chaos_replica_restart_scheduled_event;
pub use self::chaos_replica_restart_scheduled_event::ChaosReplicaRestartScheduledEvent;
mod chaos_schedule;
pub use self::chaos_schedule::ChaosSchedule;
mod chaos_schedule_description;
pub use self::chaos_schedule_description::ChaosScheduleDescription;
mod chaos_schedule_job;
pub use self::chaos_schedule_job::ChaosScheduleJob;
mod chaos_schedule_job_active_days_of_week;
pub use self::chaos_schedule_job_active_days_of_week::ChaosScheduleJobActiveDaysOfWeek;
mod chaos_schedule_status;
pub use self::chaos_schedule_status::ChaosScheduleStatus;
mod chaos_started_event;
pub use self::chaos_started_event::ChaosStartedEvent;
mod chaos_status;
pub use self::chaos_status::ChaosStatus;
mod chaos_stopped_event;
pub use self::chaos_stopped_event::ChaosStoppedEvent;
mod chaos_target_filter;
pub use self::chaos_target_filter::ChaosTargetFilter;
mod check_exists_property_batch_operation;
pub use self::check_exists_property_batch_operation::CheckExistsPropertyBatchOperation;
mod check_sequence_property_batch_operation;
pub use self::check_sequence_property_batch_operation::CheckSequencePropertyBatchOperation;
mod check_value_property_batch_operation;
pub use self::check_value_property_batch_operation::CheckValuePropertyBatchOperation;
mod cluster_configuration;
pub use self::cluster_configuration::ClusterConfiguration;
mod cluster_configuration_upgrade_description;
pub use self::cluster_configuration_upgrade_description::ClusterConfigurationUpgradeDescription;
mod cluster_configuration_upgrade_status_info;
pub use self::cluster_configuration_upgrade_status_info::ClusterConfigurationUpgradeStatusInfo;
mod cluster_event;
pub use self::cluster_event::ClusterEvent;
mod cluster_event_list;
pub use self::cluster_event_list::ClusterEventList;
mod cluster_fabric_code_version_string;
pub use self::cluster_fabric_code_version_string::ClusterFabricCodeVersionString;
mod cluster_fabric_config_version_string;
pub use self::cluster_fabric_config_version_string::ClusterFabricConfigVersionString;
mod cluster_health;
pub use self::cluster_health::ClusterHealth;
mod cluster_health_chunk;
pub use self::cluster_health_chunk::ClusterHealthChunk;
mod cluster_health_chunk_query_description;
pub use self::cluster_health_chunk_query_description::ClusterHealthChunkQueryDescription;
mod cluster_health_policies;
pub use self::cluster_health_policies::ClusterHealthPolicies;
mod cluster_health_policy;
pub use self::cluster_health_policy::ClusterHealthPolicy;
mod cluster_health_report_expired_event;
pub use self::cluster_health_report_expired_event::ClusterHealthReportExpiredEvent;
mod cluster_load_info;
pub use self::cluster_load_info::ClusterLoadInfo;
mod cluster_manifest;
pub use self::cluster_manifest::ClusterManifest;
mod cluster_new_health_report_event;
pub use self::cluster_new_health_report_event::ClusterNewHealthReportEvent;
mod cluster_upgrade_completed_event;
pub use self::cluster_upgrade_completed_event::ClusterUpgradeCompletedEvent;
mod cluster_upgrade_description_object;
pub use self::cluster_upgrade_description_object::ClusterUpgradeDescriptionObject;
mod cluster_upgrade_domain_completed_event;
pub use self::cluster_upgrade_domain_completed_event::ClusterUpgradeDomainCompletedEvent;
mod cluster_upgrade_health_policy_object;
pub use self::cluster_upgrade_health_policy_object::ClusterUpgradeHealthPolicyObject;
mod cluster_upgrade_progress_object;
pub use self::cluster_upgrade_progress_object::ClusterUpgradeProgressObject;
mod cluster_upgrade_rollback_completed_event;
pub use self::cluster_upgrade_rollback_completed_event::ClusterUpgradeRollbackCompletedEvent;
mod cluster_upgrade_rollback_started_event;
pub use self::cluster_upgrade_rollback_started_event::ClusterUpgradeRollbackStartedEvent;
mod cluster_upgrade_started_event;
pub use self::cluster_upgrade_started_event::ClusterUpgradeStartedEvent;
mod cluster_version;
pub use self::cluster_version::ClusterVersion;
mod code_package_entry_point;
pub use self::code_package_entry_point::CodePackageEntryPoint;
mod code_package_entry_point_statistics;
pub use self::code_package_entry_point_statistics::CodePackageEntryPointStatistics;
mod code_package_instance_id;
pub use self::code_package_instance_id::CodePackageInstanceId;
mod code_package_name;
pub use self::code_package_name::CodePackageName;
mod compose_deployment_status;
pub use self::compose_deployment_status::ComposeDeploymentStatus;
mod compose_deployment_status_info;
pub use self::compose_deployment_status_info::ComposeDeploymentStatusInfo;
mod compose_deployment_upgrade_description;
pub use self::compose_deployment_upgrade_description::ComposeDeploymentUpgradeDescription;
mod compose_deployment_upgrade_progress_info;
pub use self::compose_deployment_upgrade_progress_info::ComposeDeploymentUpgradeProgressInfo;
mod compose_deployment_upgrade_state;
pub use self::compose_deployment_upgrade_state::ComposeDeploymentUpgradeState;
mod config_parameter_override;
pub use self::config_parameter_override::ConfigParameterOverride;
mod config_parameter_override_list;
pub use self::config_parameter_override_list::ConfigParameterOverrideList;
mod container_api_request_body;
pub use self::container_api_request_body::ContainerApiRequestBody;
mod container_api_response;
pub use self::container_api_response::ContainerApiResponse;
mod container_api_result;
pub use self::container_api_result::ContainerApiResult;
mod container_code_package_properties;
pub use self::container_code_package_properties::ContainerCodePackageProperties;
mod container_event;
pub use self::container_event::ContainerEvent;
mod container_instance_event;
pub use self::container_instance_event::ContainerInstanceEvent;
mod container_instance_event_list;
pub use self::container_instance_event_list::ContainerInstanceEventList;
mod container_instance_view;
pub use self::container_instance_view::ContainerInstanceView;
mod container_label;
pub use self::container_label::ContainerLabel;
mod container_logs;
pub use self::container_logs::ContainerLogs;
mod container_state;
pub use self::container_state::ContainerState;
mod continuation_token;
pub use self::continuation_token::ContinuationToken;
mod correlation_scheme_list;
pub use self::correlation_scheme_list::CorrelationSchemeList;
mod create_compose_deployment_description;
pub use self::create_compose_deployment_description::CreateComposeDeploymentDescription;
mod current_upgrade_domain_duration;
pub use self::current_upgrade_domain_duration::CurrentUpgradeDomainDuration;
mod current_upgrade_domain_progress_info;
pub use self::current_upgrade_domain_progress_info::CurrentUpgradeDomainProgressInfo;
mod day_of_week;
pub use self::day_of_week::DayOfWeek;
mod day_of_week_list;
pub use self::day_of_week_list::DayOfWeekList;
mod deactivation_intent_description;
pub use self::deactivation_intent_description::DeactivationIntentDescription;
mod default_execution_policy;
pub use self::default_execution_policy::DefaultExecutionPolicy;
mod delete_property_batch_operation;
pub use self::delete_property_batch_operation::DeletePropertyBatchOperation;
mod delta_health_evaluation_bool;
pub use self::delta_health_evaluation_bool::DeltaHealthEvaluationBool;
mod delta_nodes_check_health_evaluation;
pub use self::delta_nodes_check_health_evaluation::DeltaNodesCheckHealthEvaluation;
mod deploy_service_package_to_node_description;
pub use self::deploy_service_package_to_node_description::DeployServicePackageToNodeDescription;
mod deployed_application_health;
pub use self::deployed_application_health::DeployedApplicationHealth;
mod deployed_application_health_evaluation;
pub use self::deployed_application_health_evaluation::DeployedApplicationHealthEvaluation;
mod deployed_application_health_report_expired_event;
pub use self::deployed_application_health_report_expired_event::DeployedApplicationHealthReportExpiredEvent;
mod deployed_application_health_state;
pub use self::deployed_application_health_state::DeployedApplicationHealthState;
mod deployed_application_health_state_chunk;
pub use self::deployed_application_health_state_chunk::DeployedApplicationHealthStateChunk;
mod deployed_application_health_state_chunk_list;
pub use self::deployed_application_health_state_chunk_list::DeployedApplicationHealthStateChunkList;
mod deployed_application_health_state_filter;
pub use self::deployed_application_health_state_filter::DeployedApplicationHealthStateFilter;
mod deployed_application_info;
pub use self::deployed_application_info::DeployedApplicationInfo;
mod deployed_application_info_list;
pub use self::deployed_application_info_list::DeployedApplicationInfoList;
mod deployed_application_new_health_report_event;
pub use self::deployed_application_new_health_report_event::DeployedApplicationNewHealthReportEvent;
mod deployed_application_status;
pub use self::deployed_application_status::DeployedApplicationStatus;
mod deployed_applications_health_evaluation;
pub use self::deployed_applications_health_evaluation::DeployedApplicationsHealthEvaluation;
mod deployed_code_package_info;
pub use self::deployed_code_package_info::DeployedCodePackageInfo;
mod deployed_code_package_info_list;
pub use self::deployed_code_package_info_list::DeployedCodePackageInfoList;
mod deployed_service_package_health;
pub use self::deployed_service_package_health::DeployedServicePackageHealth;
mod deployed_service_package_health_evaluation;
pub use self::deployed_service_package_health_evaluation::DeployedServicePackageHealthEvaluation;
mod deployed_service_package_health_report_expired_event;
pub use self::deployed_service_package_health_report_expired_event::DeployedServicePackageHealthReportExpiredEvent;
mod deployed_service_package_health_state;
pub use self::deployed_service_package_health_state::DeployedServicePackageHealthState;
mod deployed_service_package_health_state_chunk;
pub use self::deployed_service_package_health_state_chunk::DeployedServicePackageHealthStateChunk;
mod deployed_service_package_health_state_chunk_list;
pub use self::deployed_service_package_health_state_chunk_list::DeployedServicePackageHealthStateChunkList;
mod deployed_service_package_health_state_filter;
pub use self::deployed_service_package_health_state_filter::DeployedServicePackageHealthStateFilter;
mod deployed_service_package_health_state_list;
pub use self::deployed_service_package_health_state_list::DeployedServicePackageHealthStateList;
mod deployed_service_package_info;
pub use self::deployed_service_package_info::DeployedServicePackageInfo;
mod deployed_service_package_info_list;
pub use self::deployed_service_package_info_list::DeployedServicePackageInfoList;
mod deployed_service_package_new_health_report_event;
pub use self::deployed_service_package_new_health_report_event::DeployedServicePackageNewHealthReportEvent;
mod deployed_service_packages_health_evaluation;
pub use self::deployed_service_packages_health_evaluation::DeployedServicePackagesHealthEvaluation;
mod deployed_service_replica_detail_info;
pub use self::deployed_service_replica_detail_info::DeployedServiceReplicaDetailInfo;
mod deployed_service_replica_info;
pub use self::deployed_service_replica_info::DeployedServiceReplicaInfo;
mod deployed_service_replica_info_list;
pub use self::deployed_service_replica_info_list::DeployedServiceReplicaInfoList;
mod deployed_service_type_info;
pub use self::deployed_service_type_info::DeployedServiceTypeInfo;
mod deployed_service_type_info_list;
pub use self::deployed_service_type_info_list::DeployedServiceTypeInfoList;
mod deployed_stateful_service_replica_detail_info;
pub use self::deployed_stateful_service_replica_detail_info::DeployedStatefulServiceReplicaDetailInfo;
mod deployed_stateful_service_replica_info;
pub use self::deployed_stateful_service_replica_info::DeployedStatefulServiceReplicaInfo;
mod deployed_stateless_service_instance_detail_info;
pub use self::deployed_stateless_service_instance_detail_info::DeployedStatelessServiceInstanceDetailInfo;
mod deployed_stateless_service_instance_info;
pub use self::deployed_stateless_service_instance_info::DeployedStatelessServiceInstanceInfo;
mod deployment_name;
pub use self::deployment_name::DeploymentName;
mod deployment_status;
pub use self::deployment_status::DeploymentStatus;
mod diagnostics_description;
pub use self::diagnostics_description::DiagnosticsDescription;
mod diagnostics_ref;
pub use self::diagnostics_ref::DiagnosticsRef;
mod diagnostics_sink_kind;
pub use self::diagnostics_sink_kind::DiagnosticsSinkKind;
mod diagnostics_sink_properties;
pub use self::diagnostics_sink_properties::DiagnosticsSinkProperties;
mod disable_backup_description;
pub use self::disable_backup_description::DisableBackupDescription;
mod disk_info;
pub use self::disk_info::DiskInfo;
mod double_property_value;
pub use self::double_property_value::DoublePropertyValue;
mod dsms_azure_blob_backup_storage_description;
pub use self::dsms_azure_blob_backup_storage_description::DsmsAzureBlobBackupStorageDescription;
mod enable_backup_description;
pub use self::enable_backup_description::EnableBackupDescription;
mod endpoint_properties;
pub use self::endpoint_properties::EndpointProperties;
mod endpoint_ref;
pub use self::endpoint_ref::EndpointRef;
mod ensure_availability_safety_check;
pub use self::ensure_availability_safety_check::EnsureAvailabilitySafetyCheck;
mod ensure_partition_quorum_safety_check;
pub use self::ensure_partition_quorum_safety_check::EnsurePartitionQuorumSafetyCheck;
mod entity_health;
pub use self::entity_health::EntityHealth;
mod entity_health_state;
pub use self::entity_health_state::EntityHealthState;
mod entity_health_state_chunk;
pub use self::entity_health_state_chunk::EntityHealthStateChunk;
mod entity_health_state_chunk_list;
pub use self::entity_health_state_chunk_list::EntityHealthStateChunkList;
mod entity_kind;
pub use self::entity_kind::EntityKind;
mod entity_kind_health_state_count;
pub use self::entity_kind_health_state_count::EntityKindHealthStateCount;
mod entry_point_status;
pub use self::entry_point_status::EntryPointStatus;
mod environment_variable;
pub use self::environment_variable::EnvironmentVariable;
mod environment_variable_type;
pub use self::environment_variable_type::EnvironmentVariableType;
mod epoch;
pub use self::epoch::Epoch;
mod event_health_evaluation;
pub use self::event_health_evaluation::EventHealthEvaluation;
mod event_list;
pub use self::event_list::EventList;
mod executing_faults_chaos_event;
pub use self::executing_faults_chaos_event::ExecutingFaultsChaosEvent;
mod execution_policy;
pub use self::execution_policy::ExecutionPolicy;
mod execution_policy_type;
pub use self::execution_policy_type::ExecutionPolicyType;
mod external_store_provision_application_type_description;
pub use self::external_store_provision_application_type_description::ExternalStoreProvisionApplicationTypeDescription;
mod fabric_code_version_info;
pub use self::fabric_code_version_info::FabricCodeVersionInfo;
mod fabric_code_version_info_list;
pub use self::fabric_code_version_info_list::FabricCodeVersionInfoList;
mod fabric_config_version_info;
pub use self::fabric_config_version_info::FabricConfigVersionInfo;
mod fabric_config_version_info_list;
pub use self::fabric_config_version_info_list::FabricConfigVersionInfoList;
mod fabric_error;
pub use self::fabric_error::FabricError;
mod fabric_error_codes;
pub use self::fabric_error_codes::FabricErrorCodes;
mod fabric_error_error;
pub use self::fabric_error_error::FabricErrorError;
mod fabric_event;
pub use self::fabric_event::FabricEvent;
mod fabric_event_kind;
pub use self::fabric_event_kind::FabricEventKind;
mod fabric_name;
pub use self::fabric_name::FabricName;
mod fabric_replica_status;
pub use self::fabric_replica_status::FabricReplicaStatus;
mod failed_property_batch_info;
pub use self::failed_property_batch_info::FailedPropertyBatchInfo;
mod failed_upgrade_domain_progress_object;
pub use self::failed_upgrade_domain_progress_object::FailedUpgradeDomainProgressObject;
mod failure_action;
pub use self::failure_action::FailureAction;
mod failure_reason;
pub use self::failure_reason::FailureReason;
mod failure_upgrade_domain_progress_info;
pub use self::failure_upgrade_domain_progress_info::FailureUpgradeDomainProgressInfo;
mod file_info;
pub use self::file_info::FileInfo;
mod file_share_backup_storage_description;
pub use self::file_share_backup_storage_description::FileShareBackupStorageDescription;
mod file_version;
pub use self::file_version::FileVersion;
mod folder_info;
pub use self::folder_info::FolderInfo;
mod folder_size_info;
pub use self::folder_size_info::FolderSizeInfo;
mod force_restart;
pub use self::force_restart::ForceRestart;
mod frequency_based_backup_schedule_description;
pub use self::frequency_based_backup_schedule_description::FrequencyBasedBackupScheduleDescription;
mod gateway_destination;
pub use self::gateway_destination::GatewayDestination;
mod gateway_properties;
pub use self::gateway_properties::GatewayProperties;
mod gateway_resource_description;
pub use self::gateway_resource_description::GatewayResourceDescription;
mod gateway_resource_name;
pub use self::gateway_resource_name::GatewayResourceName;
mod get_backup_by_storage_query_description;
pub use self::get_backup_by_storage_query_description::GetBackupByStorageQueryDescription;
mod get_property_batch_operation;
pub use self::get_property_batch_operation::GetPropertyBatchOperation;
mod guid_property_value;
pub use self::guid_property_value::GuidPropertyValue;
mod health_check_retry_timeout;
pub use self::health_check_retry_timeout::HealthCheckRetryTimeout;
mod health_check_stable_duration;
pub use self::health_check_stable_duration::HealthCheckStableDuration;
mod health_check_wait_duration;
pub use self::health_check_wait_duration::HealthCheckWaitDuration;
mod health_evaluation;
pub use self::health_evaluation::HealthEvaluation;
mod health_evaluation_kind;
pub use self::health_evaluation_kind::HealthEvaluationKind;
mod health_evaluation_wrapper;
pub use self::health_evaluation_wrapper::HealthEvaluationWrapper;
mod health_event;
pub use self::health_event::HealthEvent;
mod health_information;
pub use self::health_information::HealthInformation;
mod health_state;
pub use self::health_state::HealthState;
mod health_state_count;
pub use self::health_state_count::HealthStateCount;
mod health_statistics;
pub use self::health_statistics::HealthStatistics;
mod host_isolation_mode;
pub use self::host_isolation_mode::HostIsolationMode;
mod host_type;
pub use self::host_type::HostType;
mod http_config;
pub use self::http_config::HttpConfig;
mod http_host_config;
pub use self::http_host_config::HttpHostConfig;
mod http_route_config;
pub use self::http_route_config::HttpRouteConfig;
mod http_route_match_header;
pub use self::http_route_match_header::HttpRouteMatchHeader;
mod http_route_match_path;
pub use self::http_route_match_path::HttpRouteMatchPath;
mod http_route_match_rule;
pub use self::http_route_match_rule::HttpRouteMatchRule;
mod identity_description;
pub use self::identity_description::IdentityDescription;
mod identity_item_description;
pub use self::identity_item_description::IdentityItemDescription;
mod image_registry_credential;
pub use self::image_registry_credential::ImageRegistryCredential;
mod image_registry_password_type;
pub use self::image_registry_password_type::ImageRegistryPasswordType;
mod image_store_content;
pub use self::image_store_content::ImageStoreContent;
mod image_store_copy_description;
pub use self::image_store_copy_description::ImageStoreCopyDescription;
mod image_store_info;
pub use self::image_store_info::ImageStoreInfo;
mod image_store_relative_path;
pub use self::image_store_relative_path::ImageStoreRelativePath;
mod infrastructure_service_response;
pub use self::infrastructure_service_response::InfrastructureServiceResponse;
mod inlined_value_secret_resource_properties;
pub use self::inlined_value_secret_resource_properties::InlinedValueSecretResourceProperties;
mod instance_close_delay_duration_in_seconds;
pub use self::instance_close_delay_duration_in_seconds::InstanceCloseDelayDurationInSeconds;
mod instance_id;
pub use self::instance_id::InstanceId;
mod instance_lifecycle_description;
pub use self::instance_lifecycle_description::InstanceLifecycleDescription;
mod int64_property_value;
pub use self::int64_property_value::Int64PropertyValue;
mod int64_range_partition_information;
pub use self::int64_range_partition_information::Int64RangePartitionInformation;
mod invoke_data_loss_result;
pub use self::invoke_data_loss_result::InvokeDataLossResult;
mod invoke_quorum_loss_result;
pub use self::invoke_quorum_loss_result::InvokeQuorumLossResult;
mod key_value_store_replica_status;
pub use self::key_value_store_replica_status::KeyValueStoreReplicaStatus;
mod load_metric_information;
pub use self::load_metric_information::LoadMetricInformation;
mod load_metric_report;
pub use self::load_metric_report::LoadMetricReport;
mod load_metric_report_info;
pub use self::load_metric_report_info::LoadMetricReportInfo;
mod load_metric_report_info_list;
pub use self::load_metric_report_info_list::LoadMetricReportInfoList;
mod loaded_partition_information_query_description;
pub use self::loaded_partition_information_query_description::LoadedPartitionInformationQueryDescription;
mod loaded_partition_information_result;
pub use self::loaded_partition_information_result::LoadedPartitionInformationResult;
mod loaded_partition_information_result_list;
pub use self::loaded_partition_information_result_list::LoadedPartitionInformationResultList;
mod local_network_resource_properties;
pub use self::local_network_resource_properties::LocalNetworkResourceProperties;
mod managed_application_identity;
pub use self::managed_application_identity::ManagedApplicationIdentity;
mod managed_application_identity_description;
pub use self::managed_application_identity_description::ManagedApplicationIdentityDescription;
mod managed_application_identity_list;
pub use self::managed_application_identity_list::ManagedApplicationIdentityList;
mod managed_identity_azure_blob_backup_storage_description;
pub use self::managed_identity_azure_blob_backup_storage_description::ManagedIdentityAzureBlobBackupStorageDescription;
mod managed_identity_type;
pub use self::managed_identity_type::ManagedIdentityType;
mod metric_load_description;
pub use self::metric_load_description::MetricLoadDescription;
mod min_instance_count;
pub use self::min_instance_count::MinInstanceCount;
mod min_instance_percentage;
pub use self::min_instance_percentage::MinInstancePercentage;
mod monitoring_policy_description;
pub use self::monitoring_policy_description::MonitoringPolicyDescription;
mod move_cost;
pub use self::move_cost::MoveCost;
mod name_description;
pub use self::name_description::NameDescription;
mod named_partition_information;
pub use self::named_partition_information::NamedPartitionInformation;
mod named_partition_scheme_description;
pub use self::named_partition_scheme_description::NamedPartitionSchemeDescription;
mod network_address_prefix;
pub use self::network_address_prefix::NetworkAddressPrefix;
mod network_kind;
pub use self::network_kind::NetworkKind;
mod network_ref;
pub use self::network_ref::NetworkRef;
mod network_resource_description;
pub use self::network_resource_description::NetworkResourceDescription;
mod network_resource_name;
pub use self::network_resource_name::NetworkResourceName;
mod network_resource_properties;
pub use self::network_resource_properties::NetworkResourceProperties;
mod network_resource_properties_base;
pub use self::network_resource_properties_base::NetworkResourcePropertiesBase;
mod next_upgrade_domain;
pub use self::next_upgrade_domain::NextUpgradeDomain;
mod node_aborted_event;
pub use self::node_aborted_event::NodeAbortedEvent;
mod node_added_to_cluster_event;
pub use self::node_added_to_cluster_event::NodeAddedToClusterEvent;
mod node_closed_event;
pub use self::node_closed_event::NodeClosedEvent;
mod node_deactivate_completed_event;
pub use self::node_deactivate_completed_event::NodeDeactivateCompletedEvent;
mod node_deactivate_started_event;
pub use self::node_deactivate_started_event::NodeDeactivateStartedEvent;
mod node_deactivation_info;
pub use self::node_deactivation_info::NodeDeactivationInfo;
mod node_deactivation_intent;
pub use self::node_deactivation_intent::NodeDeactivationIntent;
mod node_deactivation_status;
pub use self::node_deactivation_status::NodeDeactivationStatus;
mod node_deactivation_task;
pub use self::node_deactivation_task::NodeDeactivationTask;
mod node_deactivation_task_id;
pub use self::node_deactivation_task_id::NodeDeactivationTaskId;
mod node_deactivation_task_list;
pub use self::node_deactivation_task_list::NodeDeactivationTaskList;
mod node_deactivation_task_type;
pub use self::node_deactivation_task_type::NodeDeactivationTaskType;
mod node_down_event;
pub use self::node_down_event::NodeDownEvent;
mod node_event;
pub use self::node_event::NodeEvent;
mod node_event_list;
pub use self::node_event_list::NodeEventList;
mod node_health;
pub use self::node_health::NodeHealth;
mod node_health_evaluation;
pub use self::node_health_evaluation::NodeHealthEvaluation;
mod node_health_report_expired_event;
pub use self::node_health_report_expired_event::NodeHealthReportExpiredEvent;
mod node_health_state;
pub use self::node_health_state::NodeHealthState;
mod node_health_state_chunk;
pub use self::node_health_state_chunk::NodeHealthStateChunk;
mod node_health_state_chunk_list;
pub use self::node_health_state_chunk_list::NodeHealthStateChunkList;
mod node_health_state_filter;
pub use self::node_health_state_filter::NodeHealthStateFilter;
mod node_id;
pub use self::node_id::NodeId;
mod node_id_list;
pub use self::node_id_list::NodeIdList;
mod node_impact;
pub use self::node_impact::NodeImpact;
mod node_info;
pub use self::node_info::NodeInfo;
mod node_load_info;
pub use self::node_load_info::NodeLoadInfo;
mod node_load_metric_information;
pub use self::node_load_metric_information::NodeLoadMetricInformation;
mod node_name;
pub use self::node_name::NodeName;
mod node_new_health_report_event;
pub use self::node_new_health_report_event::NodeNewHealthReportEvent;
mod node_open_failed_event;
pub use self::node_open_failed_event::NodeOpenFailedEvent;
mod node_open_succeeded_event;
pub use self::node_open_succeeded_event::NodeOpenSucceededEvent;
mod node_removed_from_cluster_event;
pub use self::node_removed_from_cluster_event::NodeRemovedFromClusterEvent;
mod node_repair_impact_description;
pub use self::node_repair_impact_description::NodeRepairImpactDescription;
mod node_repair_target_description;
pub use self::node_repair_target_description::NodeRepairTargetDescription;
mod node_result;
pub use self::node_result::NodeResult;
mod node_status;
pub use self::node_status::NodeStatus;
mod node_tags_description;
pub use self::node_tags_description::NodeTagsDescription;
mod node_tags_list;
pub use self::node_tags_list::NodeTagsList;
mod node_transition_progress;
pub use self::node_transition_progress::NodeTransitionProgress;
mod node_transition_result;
pub use self::node_transition_result::NodeTransitionResult;
mod node_type;
pub use self::node_type::NodeType;
mod node_type_health_policy_map;
pub use self::node_type_health_policy_map::NodeTypeHealthPolicyMap;
mod node_type_health_policy_map_item;
pub use self::node_type_health_policy_map_item::NodeTypeHealthPolicyMapItem;
mod node_type_name;
pub use self::node_type_name::NodeTypeName;
mod node_type_nodes_health_evaluation;
pub use self::node_type_nodes_health_evaluation::NodeTypeNodesHealthEvaluation;
mod node_up_event;
pub use self::node_up_event::NodeUpEvent;
mod node_upgrade_phase;
pub use self::node_upgrade_phase::NodeUpgradePhase;
mod node_upgrade_progress_info;
pub use self::node_upgrade_progress_info::NodeUpgradeProgressInfo;
mod node_upgrade_progress_info_list;
pub use self::node_upgrade_progress_info_list::NodeUpgradeProgressInfoList;
mod nodes_health_evaluation;
pub use self::nodes_health_evaluation::NodesHealthEvaluation;
mod operating_system_type;
pub use self::operating_system_type::OperatingSystemType;
mod operation_id;
pub use self::operation_id::OperationId;
mod operation_state;
pub use self::operation_state::OperationState;
mod operation_status;
pub use self::operation_status::OperationStatus;
mod operation_status_list;
pub use self::operation_status_list::OperationStatusList;
mod operation_type;
pub use self::operation_type::OperationType;
mod ordering;
pub use self::ordering::Ordering;
mod package_sharing_policy_info;
pub use self::package_sharing_policy_info::PackageSharingPolicyInfo;
mod package_sharing_policy_info_list;
pub use self::package_sharing_policy_info_list::PackageSharingPolicyInfoList;
mod package_sharing_policy_scope;
pub use self::package_sharing_policy_scope::PackageSharingPolicyScope;
mod paged_application_info_list;
pub use self::paged_application_info_list::PagedApplicationInfoList;
mod paged_application_resource_description_list;
pub use self::paged_application_resource_description_list::PagedApplicationResourceDescriptionList;
mod paged_application_type_info_list;
pub use self::paged_application_type_info_list::PagedApplicationTypeInfoList;
mod paged_backup_configuration_info_list;
pub use self::paged_backup_configuration_info_list::PagedBackupConfigurationInfoList;
mod paged_backup_entity_list;
pub use self::paged_backup_entity_list::PagedBackupEntityList;
mod paged_backup_info_list;
pub use self::paged_backup_info_list::PagedBackupInfoList;
mod paged_backup_policy_description_list;
pub use self::paged_backup_policy_description_list::PagedBackupPolicyDescriptionList;
mod paged_compose_deployment_status_info_list;
pub use self::paged_compose_deployment_status_info_list::PagedComposeDeploymentStatusInfoList;
mod paged_deployed_application_info_list;
pub use self::paged_deployed_application_info_list::PagedDeployedApplicationInfoList;
mod paged_gateway_resource_description_list;
pub use self::paged_gateway_resource_description_list::PagedGatewayResourceDescriptionList;
mod paged_network_resource_description_list;
pub use self::paged_network_resource_description_list::PagedNetworkResourceDescriptionList;
mod paged_node_info_list;
pub use self::paged_node_info_list::PagedNodeInfoList;
mod paged_property_info_list;
pub use self::paged_property_info_list::PagedPropertyInfoList;
mod paged_replica_info_list;
pub use self::paged_replica_info_list::PagedReplicaInfoList;
mod paged_secret_resource_description_list;
pub use self::paged_secret_resource_description_list::PagedSecretResourceDescriptionList;
mod paged_secret_value_resource_description_list;
pub use self::paged_secret_value_resource_description_list::PagedSecretValueResourceDescriptionList;
mod paged_service_info_list;
pub use self::paged_service_info_list::PagedServiceInfoList;
mod paged_service_partition_info_list;
pub use self::paged_service_partition_info_list::PagedServicePartitionInfoList;
mod paged_service_replica_description_list;
pub use self::paged_service_replica_description_list::PagedServiceReplicaDescriptionList;
mod paged_service_resource_description_list;
pub use self::paged_service_resource_description_list::PagedServiceResourceDescriptionList;
mod paged_sub_name_info_list;
pub use self::paged_sub_name_info_list::PagedSubNameInfoList;
mod paged_update_partition_load_result_list;
pub use self::paged_update_partition_load_result_list::PagedUpdatePartitionLoadResultList;
mod paged_volume_resource_description_list;
pub use self::paged_volume_resource_description_list::PagedVolumeResourceDescriptionList;
mod partition_access_status;
pub use self::partition_access_status::PartitionAccessStatus;
mod partition_analysis_event;
pub use self::partition_analysis_event::PartitionAnalysisEvent;
mod partition_backup_configuration_info;
pub use self::partition_backup_configuration_info::PartitionBackupConfigurationInfo;
mod partition_backup_entity;
pub use self::partition_backup_entity::PartitionBackupEntity;
mod partition_data_loss_progress;
pub use self::partition_data_loss_progress::PartitionDataLossProgress;
mod partition_event;
pub use self::partition_event::PartitionEvent;
mod partition_event_list;
pub use self::partition_event_list::PartitionEventList;
mod partition_health;
pub use self::partition_health::PartitionHealth;
mod partition_health_evaluation;
pub use self::partition_health_evaluation::PartitionHealthEvaluation;
mod partition_health_report_expired_event;
pub use self::partition_health_report_expired_event::PartitionHealthReportExpiredEvent;
mod partition_health_state;
pub use self::partition_health_state::PartitionHealthState;
mod partition_health_state_chunk;
pub use self::partition_health_state_chunk::PartitionHealthStateChunk;
mod partition_health_state_chunk_list;
pub use self::partition_health_state_chunk_list::PartitionHealthStateChunkList;
mod partition_health_state_filter;
pub use self::partition_health_state_filter::PartitionHealthStateFilter;
mod partition_id;
pub use self::partition_id::PartitionId;
mod partition_information;
pub use self::partition_information::PartitionInformation;
mod partition_instance_count_scale_mechanism;
pub use self::partition_instance_count_scale_mechanism::PartitionInstanceCountScaleMechanism;
mod partition_load_information;
pub use self::partition_load_information::PartitionLoadInformation;
mod partition_metric_load_description;
pub use self::partition_metric_load_description::PartitionMetricLoadDescription;
mod partition_metric_load_description_list;
pub use self::partition_metric_load_description_list::PartitionMetricLoadDescriptionList;
mod partition_new_health_report_event;
pub use self::partition_new_health_report_event::PartitionNewHealthReportEvent;
mod partition_primary_move_analysis_event;
pub use self::partition_primary_move_analysis_event::PartitionPrimaryMoveAnalysisEvent;
mod partition_quorum_loss_progress;
pub use self::partition_quorum_loss_progress::PartitionQuorumLossProgress;
mod partition_reconfigured_event;
pub use self::partition_reconfigured_event::PartitionReconfiguredEvent;
mod partition_restart_progress;
pub use self::partition_restart_progress::PartitionRestartProgress;
mod partition_safety_check;
pub use self::partition_safety_check::PartitionSafetyCheck;
mod partition_scheme;
pub use self::partition_scheme::PartitionScheme;
mod partition_scheme_description;
pub use self::partition_scheme_description::PartitionSchemeDescription;
mod partitions_health_evaluation;
pub use self::partitions_health_evaluation::PartitionsHealthEvaluation;
mod primary_replicator_status;
pub use self::primary_replicator_status::PrimaryReplicatorStatus;
mod probe;
pub use self::probe::Probe;
mod probe_exec;
pub use self::probe_exec::ProbeExec;
mod probe_http_get;
pub use self::probe_http_get::ProbeHttpGet;
mod probe_http_get_headers;
pub use self::probe_http_get_headers::ProbeHttpGetHeaders;
mod probe_tcp_socket;
pub use self::probe_tcp_socket::ProbeTcpSocket;
mod property_batch_description_list;
pub use self::property_batch_description_list::PropertyBatchDescriptionList;
mod property_batch_info;
pub use self::property_batch_info::PropertyBatchInfo;
mod property_batch_info_kind;
pub use self::property_batch_info_kind::PropertyBatchInfoKind;
mod property_batch_operation;
pub use self::property_batch_operation::PropertyBatchOperation;
mod property_batch_operation_kind;
pub use self::property_batch_operation_kind::PropertyBatchOperationKind;
mod property_custom_type_id;
pub use self::property_custom_type_id::PropertyCustomTypeId;
mod property_description;
pub use self::property_description::PropertyDescription;
mod property_info;
pub use self::property_info::PropertyInfo;
mod property_metadata;
pub use self::property_metadata::PropertyMetadata;
mod property_name;
pub use self::property_name::PropertyName;
mod property_value;
pub use self::property_value::PropertyValue;
mod property_value_kind;
pub use self::property_value_kind::PropertyValueKind;
mod provision_application_type_description;
pub use self::provision_application_type_description::ProvisionApplicationTypeDescription;
mod provision_application_type_description_base;
pub use self::provision_application_type_description_base::ProvisionApplicationTypeDescriptionBase;
mod provision_application_type_kind;
pub use self::provision_application_type_kind::ProvisionApplicationTypeKind;
mod provision_fabric_description;
pub use self::provision_fabric_description::ProvisionFabricDescription;
mod put_property_batch_operation;
pub use self::put_property_batch_operation::PutPropertyBatchOperation;
mod reconfiguration_information;
pub use self::reconfiguration_information::ReconfigurationInformation;
mod reconfiguration_phase;
pub use self::reconfiguration_phase::ReconfigurationPhase;
mod reconfiguration_type;
pub use self::reconfiguration_type::ReconfigurationType;
mod registry_credential;
pub use self::registry_credential::RegistryCredential;
mod reliable_collections_ref;
pub use self::reliable_collections_ref::ReliableCollectionsRef;
mod remote_replicator_acknowledgement_detail;
pub use self::remote_replicator_acknowledgement_detail::RemoteReplicatorAcknowledgementDetail;
mod remote_replicator_acknowledgement_status;
pub use self::remote_replicator_acknowledgement_status::RemoteReplicatorAcknowledgementStatus;
mod remote_replicator_status;
pub use self::remote_replicator_status::RemoteReplicatorStatus;
mod remote_replicator_status_list;
pub use self::remote_replicator_status_list::RemoteReplicatorStatusList;
mod repair_impact_description_base;
pub use self::repair_impact_description_base::RepairImpactDescriptionBase;
mod repair_impact_kind;
pub use self::repair_impact_kind::RepairImpactKind;
mod repair_target_description_base;
pub use self::repair_target_description_base::RepairTargetDescriptionBase;
mod repair_target_kind;
pub use self::repair_target_kind::RepairTargetKind;
mod repair_task;
pub use self::repair_task::RepairTask;
mod repair_task_approve_description;
pub use self::repair_task_approve_description::RepairTaskApproveDescription;
mod repair_task_cancel_description;
pub use self::repair_task_cancel_description::RepairTaskCancelDescription;
mod repair_task_delete_description;
pub use self::repair_task_delete_description::RepairTaskDeleteDescription;
mod repair_task_health_check_state;
pub use self::repair_task_health_check_state::RepairTaskHealthCheckState;
mod repair_task_history;
pub use self::repair_task_history::RepairTaskHistory;
mod repair_task_list;
pub use self::repair_task_list::RepairTaskList;
mod repair_task_update_health_policy_description;
pub use self::repair_task_update_health_policy_description::RepairTaskUpdateHealthPolicyDescription;
mod repair_task_update_info;
pub use self::repair_task_update_info::RepairTaskUpdateInfo;
mod replica_event;
pub use self::replica_event::ReplicaEvent;
mod replica_event_list;
pub use self::replica_event_list::ReplicaEventList;
mod replica_health;
pub use self::replica_health::ReplicaHealth;
mod replica_health_evaluation;
pub use self::replica_health_evaluation::ReplicaHealthEvaluation;
mod replica_health_state;
pub use self::replica_health_state::ReplicaHealthState;
mod replica_health_state_chunk;
pub use self::replica_health_state_chunk::ReplicaHealthStateChunk;
mod replica_health_state_chunk_list;
pub use self::replica_health_state_chunk_list::ReplicaHealthStateChunkList;
mod replica_health_state_filter;
pub use self::replica_health_state_filter::ReplicaHealthStateFilter;
mod replica_id;
pub use self::replica_id::ReplicaId;
mod replica_id_integer;
pub use self::replica_id_integer::ReplicaIdInteger;
mod replica_info;
pub use self::replica_info::ReplicaInfo;
mod replica_kind;
pub use self::replica_kind::ReplicaKind;
mod replica_lifecycle_description;
pub use self::replica_lifecycle_description::ReplicaLifecycleDescription;
mod replica_metric_load_description;
pub use self::replica_metric_load_description::ReplicaMetricLoadDescription;
mod replica_or_instance_id;
pub use self::replica_or_instance_id::ReplicaOrInstanceId;
mod replica_role;
pub use self::replica_role::ReplicaRole;
mod replica_status;
pub use self::replica_status::ReplicaStatus;
mod replica_status_base;
pub use self::replica_status_base::ReplicaStatusBase;
mod replicas_health_evaluation;
pub use self::replicas_health_evaluation::ReplicasHealthEvaluation;
mod replicator_operation_name;
pub use self::replicator_operation_name::ReplicatorOperationName;
mod replicator_queue_status;
pub use self::replicator_queue_status::ReplicatorQueueStatus;
mod replicator_status;
pub use self::replicator_status::ReplicatorStatus;
mod resolved_service_endpoint;
pub use self::resolved_service_endpoint::ResolvedServiceEndpoint;
mod resolved_service_endpoint_list;
pub use self::resolved_service_endpoint_list::ResolvedServiceEndpointList;
mod resolved_service_partition;
pub use self::resolved_service_partition::ResolvedServicePartition;
mod resource_limits;
pub use self::resource_limits::ResourceLimits;
mod resource_requests;
pub use self::resource_requests::ResourceRequests;
mod resource_requirements;
pub use self::resource_requirements::ResourceRequirements;
mod resource_status;
pub use self::resource_status::ResourceStatus;
mod restart_deployed_code_package_description;
pub use self::restart_deployed_code_package_description::RestartDeployedCodePackageDescription;
mod restart_node_description;
pub use self::restart_node_description::RestartNodeDescription;
mod restart_partition_result;
pub use self::restart_partition_result::RestartPartitionResult;
mod restart_policy;
pub use self::restart_policy::RestartPolicy;
mod restore_partition_description;
pub use self::restore_partition_description::RestorePartitionDescription;
mod restore_progress_info;
pub use self::restore_progress_info::RestoreProgressInfo;
mod restore_state;
pub use self::restore_state::RestoreState;
mod resume_application_upgrade_description;
pub use self::resume_application_upgrade_description::ResumeApplicationUpgradeDescription;
mod resume_cluster_upgrade_description;
pub use self::resume_cluster_upgrade_description::ResumeClusterUpgradeDescription;
mod retention_policy_description;
pub use self::retention_policy_description::RetentionPolicyDescription;
mod retention_policy_type;
pub use self::retention_policy_type::RetentionPolicyType;
mod rolling_upgrade_mode;
pub use self::rolling_upgrade_mode::RollingUpgradeMode;
mod rolling_upgrade_update_description;
pub use self::rolling_upgrade_update_description::RollingUpgradeUpdateDescription;
mod run_to_completion_execution_policy;
pub use self::run_to_completion_execution_policy::RunToCompletionExecutionPolicy;
mod safety_check;
pub use self::safety_check::SafetyCheck;
mod safety_check_info_list;
pub use self::safety_check_info_list::SafetyCheckInfoList;
mod safety_check_kind;
pub use self::safety_check_kind::SafetyCheckKind;
mod safety_check_wrapper;
pub use self::safety_check_wrapper::SafetyCheckWrapper;
mod scaling_mechanism_description;
pub use self::scaling_mechanism_description::ScalingMechanismDescription;
mod scaling_mechanism_kind;
pub use self::scaling_mechanism_kind::ScalingMechanismKind;
mod scaling_policy_description;
pub use self::scaling_policy_description::ScalingPolicyDescription;
mod scaling_policy_description_list;
pub use self::scaling_policy_description_list::ScalingPolicyDescriptionList;
mod scaling_trigger_description;
pub use self::scaling_trigger_description::ScalingTriggerDescription;
mod scaling_trigger_kind;
pub use self::scaling_trigger_kind::ScalingTriggerKind;
mod secondary_active_replicator_status;
pub use self::secondary_active_replicator_status::SecondaryActiveReplicatorStatus;
mod secondary_idle_replicator_status;
pub use self::secondary_idle_replicator_status::SecondaryIdleReplicatorStatus;
mod secondary_replicator_status;
pub use self::secondary_replicator_status::SecondaryReplicatorStatus;
mod secret_kind;
pub use self::secret_kind::SecretKind;
mod secret_resource_description;
pub use self::secret_resource_description::SecretResourceDescription;
mod secret_resource_name;
pub use self::secret_resource_name::SecretResourceName;
mod secret_resource_properties;
pub use self::secret_resource_properties::SecretResourceProperties;
mod secret_resource_properties_base;
pub use self::secret_resource_properties_base::SecretResourcePropertiesBase;
mod secret_value;
pub use self::secret_value::SecretValue;
mod secret_value_properties;
pub use self::secret_value_properties::SecretValueProperties;
mod secret_value_resource_description;
pub use self::secret_value_resource_description::SecretValueResourceDescription;
mod secret_value_resource_properties;
pub use self::secret_value_resource_properties::SecretValueResourceProperties;
mod seed_node_safety_check;
pub use self::seed_node_safety_check::SeedNodeSafetyCheck;
mod selected_partition;
pub use self::selected_partition::SelectedPartition;
mod service_backup_configuration_info;
pub use self::service_backup_configuration_info::ServiceBackupConfigurationInfo;
mod service_backup_entity;
pub use self::service_backup_entity::ServiceBackupEntity;
mod service_correlation_description;
pub use self::service_correlation_description::ServiceCorrelationDescription;
mod service_correlation_scheme;
pub use self::service_correlation_scheme::ServiceCorrelationScheme;
mod service_created_event;
pub use self::service_created_event::ServiceCreatedEvent;
mod service_deleted_event;
pub use self::service_deleted_event::ServiceDeletedEvent;
mod service_description;
pub use self::service_description::ServiceDescription;
mod service_endpoint_role;
pub use self::service_endpoint_role::ServiceEndpointRole;
mod service_event;
pub use self::service_event::ServiceEvent;
mod service_event_list;
pub use self::service_event_list::ServiceEventList;
mod service_from_template_description;
pub use self::service_from_template_description::ServiceFromTemplateDescription;
mod service_health;
pub use self::service_health::ServiceHealth;
mod service_health_evaluation;
pub use self::service_health_evaluation::ServiceHealthEvaluation;
mod service_health_report_expired_event;
pub use self::service_health_report_expired_event::ServiceHealthReportExpiredEvent;
mod service_health_state;
pub use self::service_health_state::ServiceHealthState;
mod service_health_state_chunk;
pub use self::service_health_state_chunk::ServiceHealthStateChunk;
mod service_health_state_chunk_list;
pub use self::service_health_state_chunk_list::ServiceHealthStateChunkList;
mod service_health_state_filter;
pub use self::service_health_state_filter::ServiceHealthStateFilter;
mod service_id;
pub use self::service_id::ServiceId;
mod service_identity;
pub use self::service_identity::ServiceIdentity;
mod service_info;
pub use self::service_info::ServiceInfo;
mod service_kind;
pub use self::service_kind::ServiceKind;
mod service_load_metric_description;
pub use self::service_load_metric_description::ServiceLoadMetricDescription;
mod service_load_metric_weight;
pub use self::service_load_metric_weight::ServiceLoadMetricWeight;
mod service_load_metrics_list;
pub use self::service_load_metrics_list::ServiceLoadMetricsList;
mod service_manifest_name;
pub use self::service_manifest_name::ServiceManifestName;
mod service_name;
pub use self::service_name::ServiceName;
mod service_name_info;
pub use self::service_name_info::ServiceNameInfo;
mod service_new_health_report_event;
pub use self::service_new_health_report_event::ServiceNewHealthReportEvent;
mod service_operation_name;
pub use self::service_operation_name::ServiceOperationName;
mod service_package_activation_id;
pub use self::service_package_activation_id::ServicePackageActivationId;
mod service_package_activation_mode;
pub use self::service_package_activation_mode::ServicePackageActivationMode;
mod service_partition_info;
pub use self::service_partition_info::ServicePartitionInfo;
mod service_partition_kind;
pub use self::service_partition_kind::ServicePartitionKind;
mod service_partition_status;
pub use self::service_partition_status::ServicePartitionStatus;
mod service_placement_allow_multiple_stateless_instances_on_node_policy_description;
pub use self::service_placement_allow_multiple_stateless_instances_on_node_policy_description::ServicePlacementAllowMultipleStatelessInstancesOnNodePolicyDescription;
mod service_placement_invalid_domain_policy_description;
pub use self::service_placement_invalid_domain_policy_description::ServicePlacementInvalidDomainPolicyDescription;
mod service_placement_non_partially_place_service_policy_description;
pub use self::service_placement_non_partially_place_service_policy_description::ServicePlacementNonPartiallyPlaceServicePolicyDescription;
mod service_placement_policies_list;
pub use self::service_placement_policies_list::ServicePlacementPoliciesList;
mod service_placement_policy_description;
pub use self::service_placement_policy_description::ServicePlacementPolicyDescription;
mod service_placement_policy_description_list;
pub use self::service_placement_policy_description_list::ServicePlacementPolicyDescriptionList;
mod service_placement_policy_type;
pub use self::service_placement_policy_type::ServicePlacementPolicyType;
mod service_placement_prefer_primary_domain_policy_description;
pub use self::service_placement_prefer_primary_domain_policy_description::ServicePlacementPreferPrimaryDomainPolicyDescription;
mod service_placement_require_domain_distribution_policy_description;
pub use self::service_placement_require_domain_distribution_policy_description::ServicePlacementRequireDomainDistributionPolicyDescription;
mod service_placement_required_domain_policy_description;
pub use self::service_placement_required_domain_policy_description::ServicePlacementRequiredDomainPolicyDescription;
mod service_properties;
pub use self::service_properties::ServiceProperties;
mod service_replica_description;
pub use self::service_replica_description::ServiceReplicaDescription;
mod service_replica_properties;
pub use self::service_replica_properties::ServiceReplicaProperties;
mod service_resource_description;
pub use self::service_resource_description::ServiceResourceDescription;
mod service_resource_name;
pub use self::service_resource_name::ServiceResourceName;
mod service_resource_properties;
pub use self::service_resource_properties::ServiceResourceProperties;
mod service_status;
pub use self::service_status::ServiceStatus;
mod service_type_description;
pub use self::service_type_description::ServiceTypeDescription;
mod service_type_extension_description;
pub use self::service_type_extension_description::ServiceTypeExtensionDescription;
mod service_type_extension_description_list;
pub use self::service_type_extension_description_list::ServiceTypeExtensionDescriptionList;
mod service_type_health_policy;
pub use self::service_type_health_policy::ServiceTypeHealthPolicy;
mod service_type_health_policy_map;
pub use self::service_type_health_policy_map::ServiceTypeHealthPolicyMap;
mod service_type_health_policy_map_item;
pub use self::service_type_health_policy_map_item::ServiceTypeHealthPolicyMapItem;
mod service_type_info;
pub use self::service_type_info::ServiceTypeInfo;
mod service_type_info_list;
pub use self::service_type_info_list::ServiceTypeInfoList;
mod service_type_manifest;
pub use self::service_type_manifest::ServiceTypeManifest;
mod service_type_name;
pub use self::service_type_name::ServiceTypeName;
mod service_type_registration_status;
pub use self::service_type_registration_status::ServiceTypeRegistrationStatus;
mod service_update_description;
pub use self::service_update_description::ServiceUpdateDescription;
mod service_upgrade_progress;
pub use self::service_upgrade_progress::ServiceUpgradeProgress;
mod service_upgrade_progress_list;
pub use self::service_upgrade_progress_list::ServiceUpgradeProgressList;
mod services_health_evaluation;
pub use self::services_health_evaluation::ServicesHealthEvaluation;
mod setting;
pub use self::setting::Setting;
mod setting_type;
pub use self::setting_type::SettingType;
mod singleton_partition_information;
pub use self::singleton_partition_information::SingletonPartitionInformation;
mod singleton_partition_scheme_description;
pub use self::singleton_partition_scheme_description::SingletonPartitionSchemeDescription;
mod start_cluster_upgrade_description;
pub use self::start_cluster_upgrade_description::StartClusterUpgradeDescription;
mod started_chaos_event;
pub use self::started_chaos_event::StartedChaosEvent;
mod stateful_replica_health_report_expired_event;
pub use self::stateful_replica_health_report_expired_event::StatefulReplicaHealthReportExpiredEvent;
mod stateful_replica_new_health_report_event;
pub use self::stateful_replica_new_health_report_event::StatefulReplicaNewHealthReportEvent;
mod stateful_service_description;
pub use self::stateful_service_description::StatefulServiceDescription;
mod stateful_service_info;
pub use self::stateful_service_info::StatefulServiceInfo;
mod stateful_service_partition_info;
pub use self::stateful_service_partition_info::StatefulServicePartitionInfo;
mod stateful_service_replica_health;
pub use self::stateful_service_replica_health::StatefulServiceReplicaHealth;
mod stateful_service_replica_health_state;
pub use self::stateful_service_replica_health_state::StatefulServiceReplicaHealthState;
mod stateful_service_replica_info;
pub use self::stateful_service_replica_info::StatefulServiceReplicaInfo;
mod stateful_service_type_description;
pub use self::stateful_service_type_description::StatefulServiceTypeDescription;
mod stateful_service_update_description;
pub use self::stateful_service_update_description::StatefulServiceUpdateDescription;
mod stateless_replica_health_report_expired_event;
pub use self::stateless_replica_health_report_expired_event::StatelessReplicaHealthReportExpiredEvent;
mod stateless_replica_new_health_report_event;
pub use self::stateless_replica_new_health_report_event::StatelessReplicaNewHealthReportEvent;
mod stateless_service_description;
pub use self::stateless_service_description::StatelessServiceDescription;
mod stateless_service_info;
pub use self::stateless_service_info::StatelessServiceInfo;
mod stateless_service_instance_health;
pub use self::stateless_service_instance_health::StatelessServiceInstanceHealth;
mod stateless_service_instance_health_state;
pub use self::stateless_service_instance_health_state::StatelessServiceInstanceHealthState;
mod stateless_service_instance_info;
pub use self::stateless_service_instance_info::StatelessServiceInstanceInfo;
mod stateless_service_partition_info;
pub use self::stateless_service_partition_info::StatelessServicePartitionInfo;
mod stateless_service_type_description;
pub use self::stateless_service_type_description::StatelessServiceTypeDescription;
mod stateless_service_update_description;
pub use self::stateless_service_update_description::StatelessServiceUpdateDescription;
mod stopped_chaos_event;
pub use self::stopped_chaos_event::StoppedChaosEvent;
mod string_property_value;
pub use self::string_property_value::StringPropertyValue;
mod successful_property_batch_info;
pub use self::successful_property_batch_info::SuccessfulPropertyBatchInfo;
mod system_application_health_evaluation;
pub use self::system_application_health_evaluation::SystemApplicationHealthEvaluation;
mod target_application_name;
pub use self::target_application_name::TargetApplicationName;
mod target_application_type_version;
pub use self::target_application_type_version::TargetApplicationTypeVersion;
mod target_deployment_name;
pub use self::target_deployment_name::TargetDeploymentName;
mod tcp_config;
pub use self::tcp_config::TcpConfig;
mod test_error_chaos_event;
pub use self::test_error_chaos_event::TestErrorChaosEvent;
mod time_based_backup_schedule_description;
pub use self::time_based_backup_schedule_description::TimeBasedBackupScheduleDescription;
mod time_list;
pub use self::time_list::TimeList;
mod time_of_day;
pub use self::time_of_day::TimeOfDay;
mod time_range;
pub use self::time_range::TimeRange;
mod unhealthy_evaluations;
pub use self::unhealthy_evaluations::UnhealthyEvaluations;
mod uniform_int64_range_partition_scheme_description;
pub use self::uniform_int64_range_partition_scheme_description::UniformInt64RangePartitionSchemeDescription;
mod unplaced_replica_information;
pub use self::unplaced_replica_information::UnplacedReplicaInformation;
mod unprovision_application_type_description_info;
pub use self::unprovision_application_type_description_info::UnprovisionApplicationTypeDescriptionInfo;
mod unprovision_fabric_description;
pub use self::unprovision_fabric_description::UnprovisionFabricDescription;
mod update_cluster_upgrade_description;
pub use self::update_cluster_upgrade_description::UpdateClusterUpgradeDescription;
mod update_partition_load_result;
pub use self::update_partition_load_result::UpdatePartitionLoadResult;
mod upgrade_domain_delta_nodes_check_health_evaluation;
pub use self::upgrade_domain_delta_nodes_check_health_evaluation::UpgradeDomainDeltaNodesCheckHealthEvaluation;
mod upgrade_domain_duration_string;
pub use self::upgrade_domain_duration_string::UpgradeDomainDurationString;
mod upgrade_domain_info;
pub use self::upgrade_domain_info::UpgradeDomainInfo;
mod upgrade_domain_info_list;
pub use self::upgrade_domain_info_list::UpgradeDomainInfoList;
mod upgrade_domain_name;
pub use self::upgrade_domain_name::UpgradeDomainName;
mod upgrade_domain_nodes_health_evaluation;
pub use self::upgrade_domain_nodes_health_evaluation::UpgradeDomainNodesHealthEvaluation;
mod upgrade_domain_state;
pub use self::upgrade_domain_state::UpgradeDomainState;
mod upgrade_domain_timeout;
pub use self::upgrade_domain_timeout::UpgradeDomainTimeout;
mod upgrade_duration;
pub use self::upgrade_duration::UpgradeDuration;
mod upgrade_duration_string;
pub use self::upgrade_duration_string::UpgradeDurationString;
mod upgrade_failure_time_utc_string;
pub use self::upgrade_failure_time_utc_string::UpgradeFailureTimeUtcString;
mod upgrade_kind;
pub use self::upgrade_kind::UpgradeKind;
mod upgrade_mode;
pub use self::upgrade_mode::UpgradeMode;
mod upgrade_orchestration_service_state;
pub use self::upgrade_orchestration_service_state::UpgradeOrchestrationServiceState;
mod upgrade_orchestration_service_state_summary;
pub use self::upgrade_orchestration_service_state_summary::UpgradeOrchestrationServiceStateSummary;
mod upgrade_replica_set_check_timeout;
pub use self::upgrade_replica_set_check_timeout::UpgradeReplicaSetCheckTimeout;
mod upgrade_sort_order;
pub use self::upgrade_sort_order::UpgradeSortOrder;
mod upgrade_start_time_utc_string;
pub use self::upgrade_start_time_utc_string::UpgradeStartTimeUtcString;
mod upgrade_state;
pub use self::upgrade_state::UpgradeState;
mod upgrade_timeout;
pub use self::upgrade_timeout::UpgradeTimeout;
mod upgrade_type;
pub use self::upgrade_type::UpgradeType;
mod upload_chunk_range;
pub use self::upload_chunk_range::UploadChunkRange;
mod upload_session;
pub use self::upload_session::UploadSession;
mod upload_session_info;
pub use self::upload_session_info::UploadSessionInfo;
mod usage_info;
pub use self::usage_info::UsageInfo;
mod user_assigned_identity_map;
pub use self::user_assigned_identity_map::UserAssignedIdentityMap;
mod validation_failed_chaos_event;
pub use self::validation_failed_chaos_event::ValidationFailedChaosEvent;
mod volume_properties;
pub use self::volume_properties::VolumeProperties;
mod volume_provider;
pub use self::volume_provider::VolumeProvider;
mod volume_provider_parameters_azure_file;
pub use self::volume_provider_parameters_azure_file::VolumeProviderParametersAzureFile;
mod volume_reference;
pub use self::volume_reference::VolumeReference;
mod volume_resource_description;
pub use self::volume_resource_description::VolumeResourceDescription;
mod volume_resource_name;
pub use self::volume_resource_name::VolumeResourceName;
mod wait_for_inbuild_replica_safety_check;
pub use self::wait_for_inbuild_replica_safety_check::WaitForInbuildReplicaSafetyCheck;
mod wait_for_primary_placement_safety_check;
pub use self::wait_for_primary_placement_safety_check::WaitForPrimaryPlacementSafetyCheck;
mod wait_for_primary_swap_safety_check;
pub use self::wait_for_primary_swap_safety_check::WaitForPrimarySwapSafetyCheck;
mod wait_for_reconfiguration_safety_check;
pub use self::wait_for_reconfiguration_safety_check::WaitForReconfigurationSafetyCheck;
mod waiting_chaos_event;
pub use self::waiting_chaos_event::WaitingChaosEvent;

// TODO(farcaller): sort out files
pub struct File;
