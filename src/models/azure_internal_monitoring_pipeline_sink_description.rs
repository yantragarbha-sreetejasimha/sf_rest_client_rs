/*
 * Service Fabric Client APIs
 *
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * OpenAPI spec version: 8.1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// AzureInternalMonitoringPipelineSinkDescription : Diagnostics settings for Geneva.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct AzureInternalMonitoringPipelineSinkDescription {
    /// The kind of DiagnosticsSink.
    #[serde(rename = "kind")]
    kind: ::models::DiagnosticsSinkKind,
    /// Name of the sink. This value is referenced by DiagnosticsReferenceDescription
    #[serde(rename = "name")]
    name: Option<String>,
    /// A description of the sink.
    #[serde(rename = "description")]
    description: Option<String>,
    /// Azure Internal monitoring pipeline account.
    #[serde(rename = "accountName")]
    account_name: Option<String>,
    /// Azure Internal monitoring pipeline account namespace.
    #[serde(rename = "namespace")]
    namespace: Option<String>,
    /// Azure Internal monitoring agent configuration.
    #[serde(rename = "maConfigUrl")]
    ma_config_url: Option<String>,
    /// Azure Internal monitoring agent fluentd configuration.
    #[serde(rename = "fluentdConfigUrl")]
    fluentd_config_url: Option<String>,
    /// Azure Internal monitoring pipeline autokey associated with the certificate.
    #[serde(rename = "autoKeyConfigUrl")]
    auto_key_config_url: Option<String>,
}

impl AzureInternalMonitoringPipelineSinkDescription {
    /// Diagnostics settings for Geneva.
    pub fn new(
        kind: ::models::DiagnosticsSinkKind,
    ) -> AzureInternalMonitoringPipelineSinkDescription {
        AzureInternalMonitoringPipelineSinkDescription {
            kind,
            name: None,
            description: None,
            account_name: None,
            namespace: None,
            ma_config_url: None,
            fluentd_config_url: None,
            auto_key_config_url: None,
        }
    }

    pub fn set_kind(&mut self, kind: ::models::DiagnosticsSinkKind) {
        self.kind = kind;
    }

    pub fn with_kind(
        mut self,
        kind: ::models::DiagnosticsSinkKind,
    ) -> AzureInternalMonitoringPipelineSinkDescription {
        self.kind = kind;
        self
    }

    pub fn kind(&self) -> &::models::DiagnosticsSinkKind {
        &self.kind
    }

    pub fn set_name(&mut self, name: String) {
        self.name = Some(name);
    }

    pub fn with_name(
        mut self,
        name: String,
    ) -> AzureInternalMonitoringPipelineSinkDescription {
        self.name = Some(name);
        self
    }

    pub fn name(&self) -> Option<&String> {
        self.name.as_ref()
    }

    pub fn reset_name(&mut self) {
        self.name = None;
    }

    pub fn set_description(&mut self, description: String) {
        self.description = Some(description);
    }

    pub fn with_description(
        mut self,
        description: String,
    ) -> AzureInternalMonitoringPipelineSinkDescription {
        self.description = Some(description);
        self
    }

    pub fn description(&self) -> Option<&String> {
        self.description.as_ref()
    }

    pub fn reset_description(&mut self) {
        self.description = None;
    }

    pub fn set_account_name(&mut self, account_name: String) {
        self.account_name = Some(account_name);
    }

    pub fn with_account_name(
        mut self,
        account_name: String,
    ) -> AzureInternalMonitoringPipelineSinkDescription {
        self.account_name = Some(account_name);
        self
    }

    pub fn account_name(&self) -> Option<&String> {
        self.account_name.as_ref()
    }

    pub fn reset_account_name(&mut self) {
        self.account_name = None;
    }

    pub fn set_namespace(&mut self, namespace: String) {
        self.namespace = Some(namespace);
    }

    pub fn with_namespace(
        mut self,
        namespace: String,
    ) -> AzureInternalMonitoringPipelineSinkDescription {
        self.namespace = Some(namespace);
        self
    }

    pub fn namespace(&self) -> Option<&String> {
        self.namespace.as_ref()
    }

    pub fn reset_namespace(&mut self) {
        self.namespace = None;
    }

    pub fn set_ma_config_url(&mut self, ma_config_url: String) {
        self.ma_config_url = Some(ma_config_url);
    }

    pub fn with_ma_config_url(
        mut self,
        ma_config_url: String,
    ) -> AzureInternalMonitoringPipelineSinkDescription {
        self.ma_config_url = Some(ma_config_url);
        self
    }

    pub fn ma_config_url(&self) -> Option<&String> {
        self.ma_config_url.as_ref()
    }

    pub fn reset_ma_config_url(&mut self) {
        self.ma_config_url = None;
    }

    pub fn set_fluentd_config_url(&mut self, fluentd_config_url: String) {
        self.fluentd_config_url = Some(fluentd_config_url);
    }

    pub fn with_fluentd_config_url(
        mut self,
        fluentd_config_url: String,
    ) -> AzureInternalMonitoringPipelineSinkDescription {
        self.fluentd_config_url = Some(fluentd_config_url);
        self
    }

    pub fn fluentd_config_url(&self) -> Option<&String> {
        self.fluentd_config_url.as_ref()
    }

    pub fn reset_fluentd_config_url(&mut self) {
        self.fluentd_config_url = None;
    }

    pub fn set_auto_key_config_url(&mut self, auto_key_config_url: String) {
        self.auto_key_config_url = Some(auto_key_config_url);
    }

    pub fn with_auto_key_config_url(
        mut self,
        auto_key_config_url: String,
    ) -> AzureInternalMonitoringPipelineSinkDescription {
        self.auto_key_config_url = Some(auto_key_config_url);
        self
    }

    pub fn auto_key_config_url(&self) -> Option<&String> {
        self.auto_key_config_url.as_ref()
    }

    pub fn reset_auto_key_config_url(&mut self) {
        self.auto_key_config_url = None;
    }
}
