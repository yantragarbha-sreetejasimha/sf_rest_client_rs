/*
 * Service Fabric Client APIs
 *
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * OpenAPI spec version: 7.0.0.42
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// HttpRouteMatchPath : Path to match for routing.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct HttpRouteMatchPath {
    /// Uri path to match for request.
    #[serde(rename = "value")]
    value: String,
    /// replacement string for matched part of the Uri.
    #[serde(rename = "rewrite")]
    rewrite: Option<String>,
    /// how to match value in the Uri
    #[serde(rename = "type")]
    _type: String,
}

impl HttpRouteMatchPath {
    /// Path to match for routing.
    pub fn new(value: String, _type: String) -> HttpRouteMatchPath {
        HttpRouteMatchPath {
            value,
            rewrite: None,
            _type,
        }
    }

    pub fn set_value(&mut self, value: String) {
        self.value = value;
    }

    pub fn with_value(mut self, value: String) -> HttpRouteMatchPath {
        self.value = value;
        self
    }

    pub fn value(&self) -> &String {
        &self.value
    }

    pub fn set_rewrite(&mut self, rewrite: String) {
        self.rewrite = Some(rewrite);
    }

    pub fn with_rewrite(mut self, rewrite: String) -> HttpRouteMatchPath {
        self.rewrite = Some(rewrite);
        self
    }

    pub fn rewrite(&self) -> Option<&String> {
        self.rewrite.as_ref()
    }

    pub fn reset_rewrite(&mut self) {
        self.rewrite = None;
    }

    pub fn set_type(&mut self, _type: String) {
        self._type = _type;
    }

    pub fn with_type(mut self, _type: String) -> HttpRouteMatchPath {
        self._type = _type;
        self
    }

    pub fn _type(&self) -> &String {
        &self._type
    }
}
