/*
 * Service Fabric Client APIs
 *
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * OpenAPI spec version: 6.4.0.36
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// VolumeProviderParametersAzureFile : This type describes a volume provided by an Azure Files file share.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct VolumeProviderParametersAzureFile {
    /// Name of the Azure storage account for the File Share.
    #[serde(rename = "accountName")]
    account_name: String,
    /// Access key of the Azure storage account for the File Share.
    #[serde(rename = "accountKey")]
    account_key: Option<String>,
    /// Name of the Azure Files file share that provides storage for the volume.
    #[serde(rename = "shareName")]
    share_name: String,
}

impl VolumeProviderParametersAzureFile {
    /// This type describes a volume provided by an Azure Files file share.
    pub fn new(
        account_name: String,
        share_name: String,
    ) -> VolumeProviderParametersAzureFile {
        VolumeProviderParametersAzureFile {
            account_name,
            account_key: None,
            share_name,
        }
    }

    pub fn set_account_name(&mut self, account_name: String) {
        self.account_name = account_name;
    }

    pub fn with_account_name(
        mut self,
        account_name: String,
    ) -> VolumeProviderParametersAzureFile {
        self.account_name = account_name;
        self
    }

    pub fn account_name(&self) -> &String {
        &self.account_name
    }

    pub fn set_account_key(&mut self, account_key: String) {
        self.account_key = Some(account_key);
    }

    pub fn with_account_key(
        mut self,
        account_key: String,
    ) -> VolumeProviderParametersAzureFile {
        self.account_key = Some(account_key);
        self
    }

    pub fn account_key(&self) -> Option<&String> {
        self.account_key.as_ref()
    }

    pub fn reset_account_key(&mut self) {
        self.account_key = None;
    }

    pub fn set_share_name(&mut self, share_name: String) {
        self.share_name = share_name;
    }

    pub fn with_share_name(
        mut self,
        share_name: String,
    ) -> VolumeProviderParametersAzureFile {
        self.share_name = share_name;
        self
    }

    pub fn share_name(&self) -> &String {
        &self.share_name
    }
}
