/*
 * Service Fabric Client APIs
 *
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * OpenAPI spec version: 6.5.0.36
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// ServiceCorrelationDescription : Creates a particular correlation between services.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ServiceCorrelationDescription {
    /// The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.
    #[serde(rename = "Scheme")]
    scheme: ::models::ServiceCorrelationScheme,
    /// The name of the service that the correlation relationship is established with.
    #[serde(rename = "ServiceName")]
    service_name: ::models::ServiceName,
}

impl ServiceCorrelationDescription {
    /// Creates a particular correlation between services.
    pub fn new(
        scheme: ::models::ServiceCorrelationScheme,
        service_name: ::models::ServiceName,
    ) -> ServiceCorrelationDescription {
        ServiceCorrelationDescription {
            scheme,
            service_name,
        }
    }

    pub fn set_scheme(&mut self, scheme: ::models::ServiceCorrelationScheme) {
        self.scheme = scheme;
    }

    pub fn with_scheme(
        mut self,
        scheme: ::models::ServiceCorrelationScheme,
    ) -> ServiceCorrelationDescription {
        self.scheme = scheme;
        self
    }

    pub fn scheme(&self) -> &::models::ServiceCorrelationScheme {
        &self.scheme
    }

    pub fn set_service_name(&mut self, service_name: ::models::ServiceName) {
        self.service_name = service_name;
    }

    pub fn with_service_name(
        mut self,
        service_name: ::models::ServiceName,
    ) -> ServiceCorrelationDescription {
        self.service_name = service_name;
        self
    }

    pub fn service_name(&self) -> &::models::ServiceName {
        &self.service_name
    }
}
