/*
 * Service Fabric Client APIs
 *
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * OpenAPI spec version: 8.1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// ServicePlacementRequireDomainDistributionPolicyDescription : Describes the policy to be used for placement of a Service Fabric service where two replicas from the same partition should never be placed in the same fault or upgrade domain.  While this is not common it can expose the service to an increased risk of concurrent failures due to unplanned outages or other cases of subsequent/concurrent failures. As an example, consider a case where replicas are deployed across different data center, with one replica per location. In the event that one of the datacenters goes offline, normally the replica that was placed in that datacenter will be packed into one of the remaining datacenters. If this is not desirable then this policy should be set.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ServicePlacementRequireDomainDistributionPolicyDescription {
    /// The type of placement policy for a service fabric service. Following are the possible values.
    #[serde(rename = "Type")]
    _type: ::models::ServicePlacementPolicyType,
    /// The name of the domain that should used for placement as per this policy.
    #[serde(rename = "DomainName")]
    domain_name: Option<String>,
}

impl ServicePlacementRequireDomainDistributionPolicyDescription {
    /// Describes the policy to be used for placement of a Service Fabric service where two replicas from the same partition should never be placed in the same fault or upgrade domain.  While this is not common it can expose the service to an increased risk of concurrent failures due to unplanned outages or other cases of subsequent/concurrent failures. As an example, consider a case where replicas are deployed across different data center, with one replica per location. In the event that one of the datacenters goes offline, normally the replica that was placed in that datacenter will be packed into one of the remaining datacenters. If this is not desirable then this policy should be set.
    pub fn new(
        _type: ::models::ServicePlacementPolicyType,
    ) -> ServicePlacementRequireDomainDistributionPolicyDescription {
        ServicePlacementRequireDomainDistributionPolicyDescription {
            _type,
            domain_name: None,
        }
    }

    pub fn set_type(&mut self, _type: ::models::ServicePlacementPolicyType) {
        self._type = _type;
    }

    pub fn with_type(
        mut self,
        _type: ::models::ServicePlacementPolicyType,
    ) -> ServicePlacementRequireDomainDistributionPolicyDescription {
        self._type = _type;
        self
    }

    pub fn _type(&self) -> &::models::ServicePlacementPolicyType {
        &self._type
    }

    pub fn set_domain_name(&mut self, domain_name: String) {
        self.domain_name = Some(domain_name);
    }

    pub fn with_domain_name(
        mut self,
        domain_name: String,
    ) -> ServicePlacementRequireDomainDistributionPolicyDescription {
        self.domain_name = Some(domain_name);
        self
    }

    pub fn domain_name(&self) -> Option<&String> {
        self.domain_name.as_ref()
    }

    pub fn reset_domain_name(&mut self) {
        self.domain_name = None;
    }
}
