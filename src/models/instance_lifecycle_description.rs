/*
 * Service Fabric Client APIs
 *
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * OpenAPI spec version: 8.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// InstanceLifecycleDescription : Describes how the instance will behave

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct InstanceLifecycleDescription {
    /// If set to true, move/swap replica to original location after upgrade.
    #[serde(rename = "RestoreReplicaLocationAfterUpgrade")]
    restore_replica_location_after_upgrade: Option<bool>,
}

impl Default for InstanceLifecycleDescription {
    fn default() -> Self {
        Self::new()
    }
}

impl InstanceLifecycleDescription {
    /// Describes how the instance will behave
    pub fn new() -> InstanceLifecycleDescription {
        InstanceLifecycleDescription {
            restore_replica_location_after_upgrade: None,
        }
    }

    pub fn set_restore_replica_location_after_upgrade(
        &mut self,
        restore_replica_location_after_upgrade: bool,
    ) {
        self.restore_replica_location_after_upgrade =
            Some(restore_replica_location_after_upgrade);
    }

    pub fn with_restore_replica_location_after_upgrade(
        mut self,
        restore_replica_location_after_upgrade: bool,
    ) -> InstanceLifecycleDescription {
        self.restore_replica_location_after_upgrade =
            Some(restore_replica_location_after_upgrade);
        self
    }

    pub fn restore_replica_location_after_upgrade(&self) -> Option<&bool> {
        self.restore_replica_location_after_upgrade.as_ref()
    }

    pub fn reset_restore_replica_location_after_upgrade(&mut self) {
        self.restore_replica_location_after_upgrade = None;
    }
}
