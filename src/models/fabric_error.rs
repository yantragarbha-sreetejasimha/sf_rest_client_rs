/*
 * Service Fabric Client APIs
 *
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * OpenAPI spec version: 6.3.0.9
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// FabricError : The REST API operations for Service Fabric return standard HTTP status codes. This type defines the additional information returned from the Service Fabric API operations that are not successful.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct FabricError {
    /// Error object containing error code and error message.
    #[serde(rename = "Error")]
    error: ::models::FabricErrorError,
}

impl FabricError {
    /// The REST API operations for Service Fabric return standard HTTP status codes. This type defines the additional information returned from the Service Fabric API operations that are not successful.
    pub fn new(error: ::models::FabricErrorError) -> FabricError {
        FabricError { error }
    }

    pub fn set_error(&mut self, error: ::models::FabricErrorError) {
        self.error = error;
    }

    pub fn with_error(
        mut self,
        error: ::models::FabricErrorError,
    ) -> FabricError {
        self.error = error;
        self
    }

    pub fn error(&self) -> &::models::FabricErrorError {
        &self.error
    }
}
