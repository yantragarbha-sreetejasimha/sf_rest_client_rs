/*
 * Service Fabric Client APIs
 *
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * OpenAPI spec version: 7.1.0.45
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// TcpConfig : Describes the tcp configuration for external connectivity for this network.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct TcpConfig {
    /// tcp gateway config name.
    #[serde(rename = "name")]
    name: String,
    /// Specifies the port at which the service endpoint below needs to be exposed.
    #[serde(rename = "port")]
    port: i32,
    /// Describes destination endpoint for routing traffic.
    #[serde(rename = "destination")]
    destination: ::models::GatewayDestination,
}

impl TcpConfig {
    /// Describes the tcp configuration for external connectivity for this network.
    pub fn new(
        name: String,
        port: i32,
        destination: ::models::GatewayDestination,
    ) -> TcpConfig {
        TcpConfig {
            name,
            port,
            destination,
        }
    }

    pub fn set_name(&mut self, name: String) {
        self.name = name;
    }

    pub fn with_name(mut self, name: String) -> TcpConfig {
        self.name = name;
        self
    }

    pub fn name(&self) -> &String {
        &self.name
    }

    pub fn set_port(&mut self, port: i32) {
        self.port = port;
    }

    pub fn with_port(mut self, port: i32) -> TcpConfig {
        self.port = port;
        self
    }

    pub fn port(&self) -> &i32 {
        &self.port
    }

    pub fn set_destination(
        &mut self,
        destination: ::models::GatewayDestination,
    ) {
        self.destination = destination;
    }

    pub fn with_destination(
        mut self,
        destination: ::models::GatewayDestination,
    ) -> TcpConfig {
        self.destination = destination;
        self
    }

    pub fn destination(&self) -> &::models::GatewayDestination {
        &self.destination
    }
}
