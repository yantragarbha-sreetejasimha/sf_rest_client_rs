/*
 * Service Fabric Client APIs
 *
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * OpenAPI spec version: 7.2.0.46
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// EntityHealthStateChunkList : A base type for the list of health state chunks found in the cluster. It contains the total number of health states that match the input filters.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct EntityHealthStateChunkList {
    /// Total number of entity health state objects that match the specified filters from the cluster health chunk query description.
    #[serde(rename = "TotalCount")]
    total_count: Option<i64>,
}

impl Default for EntityHealthStateChunkList {
    fn default() -> Self {
        Self::new()
    }
}

impl EntityHealthStateChunkList {
    /// A base type for the list of health state chunks found in the cluster. It contains the total number of health states that match the input filters.
    pub fn new() -> EntityHealthStateChunkList {
        EntityHealthStateChunkList { total_count: None }
    }

    pub fn set_total_count(&mut self, total_count: i64) {
        self.total_count = Some(total_count);
    }

    pub fn with_total_count(
        mut self,
        total_count: i64,
    ) -> EntityHealthStateChunkList {
        self.total_count = Some(total_count);
        self
    }

    pub fn total_count(&self) -> Option<&i64> {
        self.total_count.as_ref()
    }

    pub fn reset_total_count(&mut self) {
        self.total_count = None;
    }
}
