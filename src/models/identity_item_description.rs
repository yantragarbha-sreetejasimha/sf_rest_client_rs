/*
 * Service Fabric Client APIs
 *
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * OpenAPI spec version: 6.5.0.36
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// IdentityItemDescription : Describes a single user-assigned identity associated with the application.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IdentityItemDescription {
    /// the object identifier of the Service Principal which this identity represents.
    #[serde(rename = "principalId")]
    principal_id: Option<String>,
    /// the client identifier of the Service Principal which this identity represents.
    #[serde(rename = "clientId")]
    client_id: Option<String>,
}

impl Default for IdentityItemDescription {
    fn default() -> Self {
        Self::new()
    }
}

impl IdentityItemDescription {
    /// Describes a single user-assigned identity associated with the application.
    pub fn new() -> IdentityItemDescription {
        IdentityItemDescription {
            principal_id: None,
            client_id: None,
        }
    }

    pub fn set_principal_id(&mut self, principal_id: String) {
        self.principal_id = Some(principal_id);
    }

    pub fn with_principal_id(
        mut self,
        principal_id: String,
    ) -> IdentityItemDescription {
        self.principal_id = Some(principal_id);
        self
    }

    pub fn principal_id(&self) -> Option<&String> {
        self.principal_id.as_ref()
    }

    pub fn reset_principal_id(&mut self) {
        self.principal_id = None;
    }

    pub fn set_client_id(&mut self, client_id: String) {
        self.client_id = Some(client_id);
    }

    pub fn with_client_id(
        mut self,
        client_id: String,
    ) -> IdentityItemDescription {
        self.client_id = Some(client_id);
        self
    }

    pub fn client_id(&self) -> Option<&String> {
        self.client_id.as_ref()
    }

    pub fn reset_client_id(&mut self) {
        self.client_id = None;
    }
}
