/*
 * Service Fabric Client APIs
 *
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * OpenAPI spec version: 8.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// ReplicaMetricLoadDescription : Specifies metric loads of a partition's specific secondary replica or instance.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ReplicaMetricLoadDescription {
    /// Node name of a specific secondary replica or instance.
    #[serde(rename = "NodeName")]
    node_name: Option<String>,
    /// Loads of a different metrics for a partition's secondary replica or instance.
    #[serde(rename = "ReplicaOrInstanceLoadEntries")]
    replica_or_instance_load_entries:
        Option<Vec<::models::MetricLoadDescription>>,
}

impl Default for ReplicaMetricLoadDescription {
    fn default() -> Self {
        Self::new()
    }
}

impl ReplicaMetricLoadDescription {
    /// Specifies metric loads of a partition's specific secondary replica or instance.
    pub fn new() -> ReplicaMetricLoadDescription {
        ReplicaMetricLoadDescription {
            node_name: None,
            replica_or_instance_load_entries: None,
        }
    }

    pub fn set_node_name(&mut self, node_name: String) {
        self.node_name = Some(node_name);
    }

    pub fn with_node_name(
        mut self,
        node_name: String,
    ) -> ReplicaMetricLoadDescription {
        self.node_name = Some(node_name);
        self
    }

    pub fn node_name(&self) -> Option<&String> {
        self.node_name.as_ref()
    }

    pub fn reset_node_name(&mut self) {
        self.node_name = None;
    }

    pub fn set_replica_or_instance_load_entries(
        &mut self,
        replica_or_instance_load_entries: Vec<::models::MetricLoadDescription>,
    ) {
        self.replica_or_instance_load_entries =
            Some(replica_or_instance_load_entries);
    }

    pub fn with_replica_or_instance_load_entries(
        mut self,
        replica_or_instance_load_entries: Vec<::models::MetricLoadDescription>,
    ) -> ReplicaMetricLoadDescription {
        self.replica_or_instance_load_entries =
            Some(replica_or_instance_load_entries);
        self
    }

    pub fn replica_or_instance_load_entries(
        &self,
    ) -> Option<&Vec<::models::MetricLoadDescription>> {
        self.replica_or_instance_load_entries.as_ref()
    }

    pub fn reset_replica_or_instance_load_entries(&mut self) {
        self.replica_or_instance_load_entries = None;
    }
}
