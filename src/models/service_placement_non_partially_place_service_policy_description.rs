/*
 * Service Fabric Client APIs
 *
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * OpenAPI spec version: 8.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// ServicePlacementNonPartiallyPlaceServicePolicyDescription : Describes the policy to be used for placement of a Service Fabric service where all replicas must be able to be placed in order for any replicas to be created.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ServicePlacementNonPartiallyPlaceServicePolicyDescription {
    /// The type of placement policy for a service fabric service. Following are the possible values.
    #[serde(rename = "Type")]
    _type: ::models::ServicePlacementPolicyType,
}

impl ServicePlacementNonPartiallyPlaceServicePolicyDescription {
    /// Describes the policy to be used for placement of a Service Fabric service where all replicas must be able to be placed in order for any replicas to be created.
    pub fn new(
        _type: ::models::ServicePlacementPolicyType,
    ) -> ServicePlacementNonPartiallyPlaceServicePolicyDescription {
        ServicePlacementNonPartiallyPlaceServicePolicyDescription { _type }
    }

    pub fn set_type(&mut self, _type: ::models::ServicePlacementPolicyType) {
        self._type = _type;
    }

    pub fn with_type(
        mut self,
        _type: ::models::ServicePlacementPolicyType,
    ) -> ServicePlacementNonPartiallyPlaceServicePolicyDescription {
        self._type = _type;
        self
    }

    pub fn _type(&self) -> &::models::ServicePlacementPolicyType {
        &self._type
    }
}
