/*
 * Service Fabric Client APIs
 *
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * OpenAPI spec version: 6.3.0.9
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// ClusterUpgradeHealthPolicyObject : Defines a health policy used to evaluate the health of the cluster during a cluster upgrade.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ClusterUpgradeHealthPolicyObject {
    /// The maximum allowed percentage of nodes health degradation allowed during cluster upgrades. The delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. The default value is 10%.
    #[serde(rename = "MaxPercentDeltaUnhealthyNodes")]
    max_percent_delta_unhealthy_nodes: Option<i32>,
    /// The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades. The delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits. The default value is 15%.
    #[serde(rename = "MaxPercentUpgradeDomainDeltaUnhealthyNodes")]
    max_percent_upgrade_domain_delta_unhealthy_nodes: Option<i32>,
}

impl Default for ClusterUpgradeHealthPolicyObject {
    fn default() -> Self {
        Self::new()
    }
}

impl ClusterUpgradeHealthPolicyObject {
    /// Defines a health policy used to evaluate the health of the cluster during a cluster upgrade.
    pub fn new() -> ClusterUpgradeHealthPolicyObject {
        ClusterUpgradeHealthPolicyObject {
            max_percent_delta_unhealthy_nodes: None,
            max_percent_upgrade_domain_delta_unhealthy_nodes: None,
        }
    }

    pub fn set_max_percent_delta_unhealthy_nodes(
        &mut self,
        max_percent_delta_unhealthy_nodes: i32,
    ) {
        self.max_percent_delta_unhealthy_nodes =
            Some(max_percent_delta_unhealthy_nodes);
    }

    pub fn with_max_percent_delta_unhealthy_nodes(
        mut self,
        max_percent_delta_unhealthy_nodes: i32,
    ) -> ClusterUpgradeHealthPolicyObject {
        self.max_percent_delta_unhealthy_nodes =
            Some(max_percent_delta_unhealthy_nodes);
        self
    }

    pub fn max_percent_delta_unhealthy_nodes(&self) -> Option<&i32> {
        self.max_percent_delta_unhealthy_nodes.as_ref()
    }

    pub fn reset_max_percent_delta_unhealthy_nodes(&mut self) {
        self.max_percent_delta_unhealthy_nodes = None;
    }

    pub fn set_max_percent_upgrade_domain_delta_unhealthy_nodes(
        &mut self,
        max_percent_upgrade_domain_delta_unhealthy_nodes: i32,
    ) {
        self.max_percent_upgrade_domain_delta_unhealthy_nodes =
            Some(max_percent_upgrade_domain_delta_unhealthy_nodes);
    }

    pub fn with_max_percent_upgrade_domain_delta_unhealthy_nodes(
        mut self,
        max_percent_upgrade_domain_delta_unhealthy_nodes: i32,
    ) -> ClusterUpgradeHealthPolicyObject {
        self.max_percent_upgrade_domain_delta_unhealthy_nodes =
            Some(max_percent_upgrade_domain_delta_unhealthy_nodes);
        self
    }

    pub fn max_percent_upgrade_domain_delta_unhealthy_nodes(
        &self,
    ) -> Option<&i32> {
        self.max_percent_upgrade_domain_delta_unhealthy_nodes
            .as_ref()
    }

    pub fn reset_max_percent_upgrade_domain_delta_unhealthy_nodes(&mut self) {
        self.max_percent_upgrade_domain_delta_unhealthy_nodes = None;
    }
}
